{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "Case Study\n",
    "Objective:\n",
    "1. Make the learner load the data using pandas.\n",
    "2. Create new columns in dataset from existing columns.\n",
    "3. Use pandas to answer questions of interest.\n",
    "4. Plot variables of interest.\n",
    "\n",
    "Dataset used: Prisoners dataset sourced from data.gov.in\n",
    "\n",
    "Questions:\n",
    "    \n",
    "1. Data Loading:\n",
    "a. Load the dataset “prisoners.csv” using pandas and display the first and\n",
    "last five rows in the dataset.\n",
    "[Hint: Refer to read_csv, head and tail methods in pandas]\n",
    "\n",
    "b. Use describe method in pandas and find out the number of columns. Can you say something about those rows who have zero inmates?\n",
    "[Hint: Use the loc attribute of dataframe combined with conditional\n",
    "checks]\n",
    "2. Data Manipulation:\n",
    "a. Create a new column -’total_benefitted’ that is a sum of inmates\n",
    "benefitted through all modes.\n",
    "[Hint: Use sum method with appropriate axis]\n",
    "b. Create a new row - “totals” that is the sum of all inmates benefitted through each mode across all states.\n",
    "\n",
    "3. Plotting:\n",
    "    \n",
    "a. Make a bar plot with each state name on the x -axis and their total benefitted inmates as their bar heights. Which state has the maximum number of beneficiaries?\n",
    "[Hint: Use bar method of pyplot]\n",
    "b. Make a pie chart that depicts the ratio among different modes of benefits.\n",
    "[Hint: Use pie method of pyplot]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>STATE/UT</th>\n",
       "      <th>YEAR</th>\n",
       "      <th>No. of Inmates benefitted by Elementary Education</th>\n",
       "      <th>No. of Inmates benefitted by Adult Education</th>\n",
       "      <th>No. of Inmates benefitted by Higher Education</th>\n",
       "      <th>No. of Inmates benefitted by Computer Course</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>2013</td>\n",
       "      <td>9480</td>\n",
       "      <td>13758</td>\n",
       "      <td>672</td>\n",
       "      <td>170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Arunachal Pradesh</td>\n",
       "      <td>2013</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Assam</td>\n",
       "      <td>2013</td>\n",
       "      <td>676</td>\n",
       "      <td>750</td>\n",
       "      <td>14</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Bihar</td>\n",
       "      <td>2013</td>\n",
       "      <td>1693</td>\n",
       "      <td>3013</td>\n",
       "      <td>125</td>\n",
       "      <td>1417</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Chhatisgarh</td>\n",
       "      <td>2013</td>\n",
       "      <td>1664</td>\n",
       "      <td>1803</td>\n",
       "      <td>192</td>\n",
       "      <td>103</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            STATE/UT  YEAR  No. of Inmates benefitted by Elementary Education  \\\n",
       "0     Andhra Pradesh  2013                                               9480   \n",
       "1  Arunachal Pradesh  2013                                                  0   \n",
       "2              Assam  2013                                                676   \n",
       "3              Bihar  2013                                               1693   \n",
       "4        Chhatisgarh  2013                                               1664   \n",
       "\n",
       "   No. of Inmates benefitted by Adult Education  \\\n",
       "0                                         13758   \n",
       "1                                             0   \n",
       "2                                           750   \n",
       "3                                          3013   \n",
       "4                                          1803   \n",
       "\n",
       "   No. of Inmates benefitted by Higher Education  \\\n",
       "0                                            672   \n",
       "1                                              0   \n",
       "2                                             14   \n",
       "3                                            125   \n",
       "4                                            192   \n",
       "\n",
       "   No. of Inmates benefitted by Computer Course  \n",
       "0                                           170  \n",
       "1                                             0  \n",
       "2                                            30  \n",
       "3                                          1417  \n",
       "4                                           103  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'''\n",
    "1. Data Loading:\n",
    "a. Load the dataset “prisoners.csv” using pandas and display the first and\n",
    "last five rows in the dataset.\n",
    "[Hint: Refer to read_csv, head and tail methods in pandas]\n",
    "\n",
    "'''\n",
    "\n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "data='/Users/atul595525/Desktop/learning/Edureka_courses/Python_For_Data_Science/Module_6_Introduction_to_Machine_Learning_with_Python/prisoners.csv'\n",
    "\n",
    "df = pd.read_csv(data)\n",
    "\n",
    "df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>STATE/UT</th>\n",
       "      <th>YEAR</th>\n",
       "      <th>No. of Inmates benefitted by Elementary Education</th>\n",
       "      <th>No. of Inmates benefitted by Adult Education</th>\n",
       "      <th>No. of Inmates benefitted by Higher Education</th>\n",
       "      <th>No. of Inmates benefitted by Computer Course</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>D &amp; N Haveli</td>\n",
       "      <td>2013</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>Daman &amp; Diu</td>\n",
       "      <td>2013</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>2013</td>\n",
       "      <td>1458</td>\n",
       "      <td>1187</td>\n",
       "      <td>908</td>\n",
       "      <td>174</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>Lakshadweep</td>\n",
       "      <td>2013</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>Pondicherry</td>\n",
       "      <td>2013</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        STATE/UT  YEAR  No. of Inmates benefitted by Elementary Education  \\\n",
       "30  D & N Haveli  2013                                                  0   \n",
       "31   Daman & Diu  2013                                                  0   \n",
       "32         Delhi  2013                                               1458   \n",
       "33   Lakshadweep  2013                                                  0   \n",
       "34   Pondicherry  2013                                                  0   \n",
       "\n",
       "    No. of Inmates benefitted by Adult Education  \\\n",
       "30                                             0   \n",
       "31                                             0   \n",
       "32                                          1187   \n",
       "33                                             0   \n",
       "34                                             0   \n",
       "\n",
       "    No. of Inmates benefitted by Higher Education  \\\n",
       "30                                              0   \n",
       "31                                              0   \n",
       "32                                            908   \n",
       "33                                              0   \n",
       "34                                              0   \n",
       "\n",
       "    No. of Inmates benefitted by Computer Course  \n",
       "30                                             0  \n",
       "31                                             0  \n",
       "32                                           174  \n",
       "33                                             0  \n",
       "34                                             0  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.tail(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>YEAR</th>\n",
       "      <th>No. of Inmates benefitted by Elementary Education</th>\n",
       "      <th>No. of Inmates benefitted by Adult Education</th>\n",
       "      <th>No. of Inmates benefitted by Higher Education</th>\n",
       "      <th>No. of Inmates benefitted by Computer Course</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>35.0</td>\n",
       "      <td>35.000000</td>\n",
       "      <td>35.000000</td>\n",
       "      <td>35.000000</td>\n",
       "      <td>35.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>2013.0</td>\n",
       "      <td>1057.914286</td>\n",
       "      <td>1534.857143</td>\n",
       "      <td>237.457143</td>\n",
       "      <td>210.171429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.0</td>\n",
       "      <td>2078.196777</td>\n",
       "      <td>3022.110503</td>\n",
       "      <td>375.614191</td>\n",
       "      <td>359.117340</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>2013.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2013.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>6.500000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>2013.0</td>\n",
       "      <td>167.000000</td>\n",
       "      <td>237.000000</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>38.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>2013.0</td>\n",
       "      <td>1294.500000</td>\n",
       "      <td>1733.500000</td>\n",
       "      <td>234.500000</td>\n",
       "      <td>227.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>2013.0</td>\n",
       "      <td>9480.000000</td>\n",
       "      <td>13758.000000</td>\n",
       "      <td>1353.000000</td>\n",
       "      <td>1417.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         YEAR  No. of Inmates benefitted by Elementary Education  \\\n",
       "count    35.0                                          35.000000   \n",
       "mean   2013.0                                        1057.914286   \n",
       "std       0.0                                        2078.196777   \n",
       "min    2013.0                                           0.000000   \n",
       "25%    2013.0                                           0.000000   \n",
       "50%    2013.0                                         167.000000   \n",
       "75%    2013.0                                        1294.500000   \n",
       "max    2013.0                                        9480.000000   \n",
       "\n",
       "       No. of Inmates benefitted by Adult Education  \\\n",
       "count                                     35.000000   \n",
       "mean                                    1534.857143   \n",
       "std                                     3022.110503   \n",
       "min                                        0.000000   \n",
       "25%                                        6.500000   \n",
       "50%                                      237.000000   \n",
       "75%                                     1733.500000   \n",
       "max                                    13758.000000   \n",
       "\n",
       "       No. of Inmates benefitted by Higher Education  \\\n",
       "count                                      35.000000   \n",
       "mean                                      237.457143   \n",
       "std                                       375.614191   \n",
       "min                                         0.000000   \n",
       "25%                                         2.000000   \n",
       "50%                                        33.000000   \n",
       "75%                                       234.500000   \n",
       "max                                      1353.000000   \n",
       "\n",
       "       No. of Inmates benefitted by Computer Course  \n",
       "count                                     35.000000  \n",
       "mean                                     210.171429  \n",
       "std                                      359.117340  \n",
       "min                                        0.000000  \n",
       "25%                                        0.000000  \n",
       "50%                                       38.000000  \n",
       "75%                                      227.500000  \n",
       "max                                     1417.000000  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'''\n",
    "\n",
    "b. Use describe method in pandas and find out the number of columns. \n",
    "Can you say something about those rows who have zero inmates?\n",
    "[Hint: Use the loc attribute of dataframe combined with conditional\n",
    "checks]\n",
    "\n",
    "'''\n",
    "\n",
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['STATE/UT', 'YEAR', 'No. of Inmates benefitted by Elementary Education',\n",
       "       'No. of Inmates benefitted by Adult Education',\n",
       "       'No. of Inmates benefitted by Higher Education',\n",
       "       'No. of Inmates benefitted by Computer Course'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>STATE/UT</th>\n",
       "      <th>YEAR</th>\n",
       "      <th>No. of Inmates benefitted by Elementary Education</th>\n",
       "      <th>No. of Inmates benefitted by Adult Education</th>\n",
       "      <th>No. of Inmates benefitted by Higher Education</th>\n",
       "      <th>No. of Inmates benefitted by Computer Course</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Arunachal Pradesh</td>\n",
       "      <td>2013</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Manipur</td>\n",
       "      <td>2013</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Nagaland</td>\n",
       "      <td>2013</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Sikkim</td>\n",
       "      <td>2013</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>D &amp; N Haveli</td>\n",
       "      <td>2013</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>Daman &amp; Diu</td>\n",
       "      <td>2013</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             STATE/UT  YEAR  \\\n",
       "1   Arunachal Pradesh  2013   \n",
       "15            Manipur  2013   \n",
       "18           Nagaland  2013   \n",
       "22             Sikkim  2013   \n",
       "30       D & N Haveli  2013   \n",
       "31        Daman & Diu  2013   \n",
       "\n",
       "    No. of Inmates benefitted by Elementary Education  \\\n",
       "1                                                   0   \n",
       "15                                                  0   \n",
       "18                                                  0   \n",
       "22                                                  0   \n",
       "30                                                  0   \n",
       "31                                                  0   \n",
       "\n",
       "    No. of Inmates benefitted by Adult Education  \\\n",
       "1                                              0   \n",
       "15                                             0   \n",
       "18                                             0   \n",
       "22                                             0   \n",
       "30                                             0   \n",
       "31                                             0   \n",
       "\n",
       "    No. of Inmates benefitted by Higher Education  \\\n",
       "1                                               0   \n",
       "15                                              0   \n",
       "18                                              0   \n",
       "22                                              0   \n",
       "30                                              0   \n",
       "31                                              0   \n",
       "\n",
       "    No. of Inmates benefitted by Computer Course  \n",
       "1                                              0  \n",
       "15                                             0  \n",
       "18                                             0  \n",
       "22                                             0  \n",
       "30                                             0  \n",
       "31                                             0  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#df_woman_With_phd = df[(df['Gender']==0) & (df['PhD']==1)]\n",
    "\n",
    "df_zero_inmates = df[(df['No. of Inmates benefitted by Elementary Education'] ==0) & (df['No. of Inmates benefitted by Adult Education'] ==0) & (df['No. of Inmates benefitted by Higher Education'] ==0) & (df['No. of Inmates benefitted by Computer Course'] ==0)]\n",
    "\n",
    "df_zero_inmates.head(6)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "STATE/UT                                             8\n",
       "YEAR                                                 8\n",
       "No. of Inmates benefitted by Elementary Education    8\n",
       "No. of Inmates benefitted by Adult Education         8\n",
       "No. of Inmates benefitted by Higher Education        8\n",
       "No. of Inmates benefitted by Computer Course         8\n",
       "dtype: int64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_zero_inmates.count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>STATE/UT</th>\n",
       "      <th>YEAR</th>\n",
       "      <th>No. of Inmates benefitted by Elementary Education</th>\n",
       "      <th>No. of Inmates benefitted by Adult Education</th>\n",
       "      <th>No. of Inmates benefitted by Higher Education</th>\n",
       "      <th>No. of Inmates benefitted by Computer Course</th>\n",
       "      <th>total_benefitted</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>2013</td>\n",
       "      <td>9480</td>\n",
       "      <td>13758</td>\n",
       "      <td>672</td>\n",
       "      <td>170</td>\n",
       "      <td>24080</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Arunachal Pradesh</td>\n",
       "      <td>2013</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Assam</td>\n",
       "      <td>2013</td>\n",
       "      <td>676</td>\n",
       "      <td>750</td>\n",
       "      <td>14</td>\n",
       "      <td>30</td>\n",
       "      <td>1470</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Bihar</td>\n",
       "      <td>2013</td>\n",
       "      <td>1693</td>\n",
       "      <td>3013</td>\n",
       "      <td>125</td>\n",
       "      <td>1417</td>\n",
       "      <td>6248</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Chhatisgarh</td>\n",
       "      <td>2013</td>\n",
       "      <td>1664</td>\n",
       "      <td>1803</td>\n",
       "      <td>192</td>\n",
       "      <td>103</td>\n",
       "      <td>3762</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            STATE/UT  YEAR  No. of Inmates benefitted by Elementary Education  \\\n",
       "0     Andhra Pradesh  2013                                               9480   \n",
       "1  Arunachal Pradesh  2013                                                  0   \n",
       "2              Assam  2013                                                676   \n",
       "3              Bihar  2013                                               1693   \n",
       "4        Chhatisgarh  2013                                               1664   \n",
       "\n",
       "   No. of Inmates benefitted by Adult Education  \\\n",
       "0                                         13758   \n",
       "1                                             0   \n",
       "2                                           750   \n",
       "3                                          3013   \n",
       "4                                          1803   \n",
       "\n",
       "   No. of Inmates benefitted by Higher Education  \\\n",
       "0                                            672   \n",
       "1                                              0   \n",
       "2                                             14   \n",
       "3                                            125   \n",
       "4                                            192   \n",
       "\n",
       "   No. of Inmates benefitted by Computer Course  total_benefitted  \n",
       "0                                           170             24080  \n",
       "1                                             0                 0  \n",
       "2                                            30              1470  \n",
       "3                                          1417              6248  \n",
       "4                                           103              3762  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'''\n",
    "2. Data Manipulation:\n",
    "a. Create a new column -’total_benefitted’ that is a sum of inmates\n",
    "benefitted through all modes.\n",
    "[Hint: Use sum method with appropriate axis]\n",
    "b. Create a new row - “totals” that is the sum of all inmates benefitted through each mode across all states.\n",
    "\n",
    "\n",
    "\n",
    "# Import pandas package  \n",
    "import pandas as pd \n",
    "  \n",
    "# Define a dictionary containing Students data \n",
    "data = {'Name': ['Jai', 'Princi', 'Gaurav', 'Anuj'], \n",
    "        'Height': [5.1, 6.2, 5.1, 5.2], \n",
    "        'Qualification': ['Msc', 'MA', 'Msc', 'Msc']} \n",
    "  \n",
    "# Convert the dictionary into DataFrame \n",
    "df = pd.DataFrame(data) \n",
    "  \n",
    "# Declare a list that is to be converted into a column \n",
    "address = ['Delhi', 'Bangalore', 'Chennai', 'Patna'] \n",
    "  \n",
    "# Using 'Address' as the column name \n",
    "# and equating it to the list \n",
    "df['Address'] = address \n",
    "  \n",
    "# Observe the result \n",
    "df \n",
    "\n",
    "\n",
    "'''\n",
    "\n",
    "\n",
    "\n",
    "\"\"\"\n",
    "z = [ row.x + row.y for index, row in df.iterrows() ]\n",
    "\n",
    "df['z'] = z\n",
    "\n",
    "\"\"\"\n",
    "\n",
    "#total_benefitted = [ df.\"No. of Inmates benefitted by Elementary Education\" + df.\"No. of Inmates benefitted by Adult Education\" + df.\"No. of Inmates benefitted by Higher Education\" + df.\"No. of Inmates benefitted by Computer Course\" for index, row in df.iterrows() ]\n",
    "\n",
    "\n",
    "#df['total_benefitted'] = df.sum(axis=1)\n",
    "\n",
    "# above syntax included year also\n",
    "\n",
    "\n",
    "\"\"\"\n",
    "In [37]:  df = pd.DataFrame({\"A\":[1,2,3],\"B\":[4,6,9]})\n",
    "\n",
    "In [38]: df\n",
    "Out[38]:\n",
    "   A  B\n",
    "0  1  4\n",
    "1  2  6\n",
    "2  3  9\n",
    "\n",
    "In [39]: df['C']=df.loc[:,['A','B']].sum(axis=1)\n",
    "\n",
    "In [40]: df\n",
    "Out[40]:\n",
    "   A  B   C\n",
    "0  1  4   5\n",
    "1  2  6   8\n",
    "2  3  9  12\n",
    "\n",
    "\"\"\"\n",
    "\n",
    "df['total_benefitted'] =  df[['No. of Inmates benefitted by Elementary Education', 'No. of Inmates benefitted by Adult Education',\n",
    "                             'No. of Inmates benefitted by Higher Education','No. of Inmates benefitted by Computer Course']].sum(axis=1)\n",
    "\n",
    "\n",
    "df.head(5)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "#b. Create a new row - “totals” that is the sum of all inmates benefitted through each mode across all states.\n",
    "\n",
    "df.loc[\"totals\"] = df[['No. of Inmates benefitted by Elementary Education', 'No. of Inmates benefitted by Adult Education',\n",
    "                             'No. of Inmates benefitted by Higher Education','No. of Inmates benefitted by Computer Course','total_benefitted']].sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>STATE/UT</th>\n",
       "      <th>YEAR</th>\n",
       "      <th>No. of Inmates benefitted by Elementary Education</th>\n",
       "      <th>No. of Inmates benefitted by Adult Education</th>\n",
       "      <th>No. of Inmates benefitted by Higher Education</th>\n",
       "      <th>No. of Inmates benefitted by Computer Course</th>\n",
       "      <th>total_benefitted</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>9480.0</td>\n",
       "      <td>13758.0</td>\n",
       "      <td>672.0</td>\n",
       "      <td>170.0</td>\n",
       "      <td>24080.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Arunachal Pradesh</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Assam</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>676.0</td>\n",
       "      <td>750.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>1470.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Bihar</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>1693.0</td>\n",
       "      <td>3013.0</td>\n",
       "      <td>125.0</td>\n",
       "      <td>1417.0</td>\n",
       "      <td>6248.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Chhatisgarh</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>1664.0</td>\n",
       "      <td>1803.0</td>\n",
       "      <td>192.0</td>\n",
       "      <td>103.0</td>\n",
       "      <td>3762.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Goa</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>88.0</td>\n",
       "      <td>101.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Gujarat</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>2310.0</td>\n",
       "      <td>3133.0</td>\n",
       "      <td>875.0</td>\n",
       "      <td>966.0</td>\n",
       "      <td>7284.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Haryana</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>1131.0</td>\n",
       "      <td>774.0</td>\n",
       "      <td>1112.0</td>\n",
       "      <td>243.0</td>\n",
       "      <td>3260.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Himachal Pradesh</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>139.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>102.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>34.0</td>\n",
       "      <td>293.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Jharkhand</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>3008.0</td>\n",
       "      <td>2595.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>574.0</td>\n",
       "      <td>6315.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Karnataka</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>633.0</td>\n",
       "      <td>568.0</td>\n",
       "      <td>170.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>1383.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Kerala</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>156.0</td>\n",
       "      <td>96.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>250.0</td>\n",
       "      <td>526.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Madhya Pradesh</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>1978.0</td>\n",
       "      <td>9574.0</td>\n",
       "      <td>301.0</td>\n",
       "      <td>151.0</td>\n",
       "      <td>12004.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>346.0</td>\n",
       "      <td>2743.0</td>\n",
       "      <td>882.0</td>\n",
       "      <td>1330.0</td>\n",
       "      <td>5301.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Manipur</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Meghalaya</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>31.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Mizoram</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>43.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Nagaland</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Orissa</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>622.0</td>\n",
       "      <td>613.0</td>\n",
       "      <td>277.0</td>\n",
       "      <td>384.0</td>\n",
       "      <td>1896.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Punjab</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>325.0</td>\n",
       "      <td>606.0</td>\n",
       "      <td>112.0</td>\n",
       "      <td>168.0</td>\n",
       "      <td>1211.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Rajasthan</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>1050.0</td>\n",
       "      <td>237.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1389.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Sikkim</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Tamilnadu</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>68.0</td>\n",
       "      <td>1664.0</td>\n",
       "      <td>757.0</td>\n",
       "      <td>478.0</td>\n",
       "      <td>2967.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Tripura</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>34.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>7876.0</td>\n",
       "      <td>8093.0</td>\n",
       "      <td>1353.0</td>\n",
       "      <td>212.0</td>\n",
       "      <td>17534.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Uttaranchal</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>205.0</td>\n",
       "      <td>42.0</td>\n",
       "      <td>29.0</td>\n",
       "      <td>72.0</td>\n",
       "      <td>348.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>West Bengal</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>2023.0</td>\n",
       "      <td>1889.0</td>\n",
       "      <td>123.0</td>\n",
       "      <td>460.0</td>\n",
       "      <td>4495.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>A &amp; N Islands</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>167.0</td>\n",
       "      <td>45.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>223.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Chandigarh</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>265.0</td>\n",
       "      <td>85.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>350.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>D &amp; N Haveli</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>Daman &amp; Diu</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>1458.0</td>\n",
       "      <td>1187.0</td>\n",
       "      <td>908.0</td>\n",
       "      <td>174.0</td>\n",
       "      <td>3727.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>Lakshadweep</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>Pondicherry</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>totals</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>111081.0</td>\n",
       "      <td>161160.0</td>\n",
       "      <td>24933.0</td>\n",
       "      <td>22068.0</td>\n",
       "      <td>106414.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 STATE/UT    YEAR  \\\n",
       "0          Andhra Pradesh  2013.0   \n",
       "1       Arunachal Pradesh  2013.0   \n",
       "2                   Assam  2013.0   \n",
       "3                   Bihar  2013.0   \n",
       "4             Chhatisgarh  2013.0   \n",
       "5                     Goa  2013.0   \n",
       "6                 Gujarat  2013.0   \n",
       "7                 Haryana  2013.0   \n",
       "8        Himachal Pradesh  2013.0   \n",
       "9         Jammu & Kashmir  2013.0   \n",
       "10              Jharkhand  2013.0   \n",
       "11              Karnataka  2013.0   \n",
       "12                 Kerala  2013.0   \n",
       "13         Madhya Pradesh  2013.0   \n",
       "14            Maharashtra  2013.0   \n",
       "15                Manipur  2013.0   \n",
       "16              Meghalaya  2013.0   \n",
       "17                Mizoram  2013.0   \n",
       "18               Nagaland  2013.0   \n",
       "19                 Orissa  2013.0   \n",
       "20                 Punjab  2013.0   \n",
       "21              Rajasthan  2013.0   \n",
       "22                 Sikkim  2013.0   \n",
       "23              Tamilnadu  2013.0   \n",
       "24                Tripura  2013.0   \n",
       "25          Uttar Pradesh  2013.0   \n",
       "26            Uttaranchal  2013.0   \n",
       "27            West Bengal  2013.0   \n",
       "28          A & N Islands  2013.0   \n",
       "29             Chandigarh  2013.0   \n",
       "30           D & N Haveli  2013.0   \n",
       "31            Daman & Diu  2013.0   \n",
       "32                  Delhi  2013.0   \n",
       "33            Lakshadweep  2013.0   \n",
       "34            Pondicherry  2013.0   \n",
       "totals                NaN     NaN   \n",
       "\n",
       "        No. of Inmates benefitted by Elementary Education  \\\n",
       "0                                                  9480.0   \n",
       "1                                                     0.0   \n",
       "2                                                   676.0   \n",
       "3                                                  1693.0   \n",
       "4                                                  1664.0   \n",
       "5                                                     7.0   \n",
       "6                                                  2310.0   \n",
       "7                                                  1131.0   \n",
       "8                                                    33.0   \n",
       "9                                                   102.0   \n",
       "10                                                 3008.0   \n",
       "11                                                  633.0   \n",
       "12                                                  156.0   \n",
       "13                                                 1978.0   \n",
       "14                                                  346.0   \n",
       "15                                                    0.0   \n",
       "16                                                    1.0   \n",
       "17                                                    0.0   \n",
       "18                                                    0.0   \n",
       "19                                                  622.0   \n",
       "20                                                  325.0   \n",
       "21                                                 1050.0   \n",
       "22                                                    0.0   \n",
       "23                                                   68.0   \n",
       "24                                                   15.0   \n",
       "25                                                 7876.0   \n",
       "26                                                  205.0   \n",
       "27                                                 2023.0   \n",
       "28                                                  167.0   \n",
       "29                                                    0.0   \n",
       "30                                                    0.0   \n",
       "31                                                    0.0   \n",
       "32                                                 1458.0   \n",
       "33                                                    0.0   \n",
       "34                                                    0.0   \n",
       "totals                                           111081.0   \n",
       "\n",
       "        No. of Inmates benefitted by Adult Education  \\\n",
       "0                                            13758.0   \n",
       "1                                                0.0   \n",
       "2                                              750.0   \n",
       "3                                             3013.0   \n",
       "4                                             1803.0   \n",
       "5                                                0.0   \n",
       "6                                             3133.0   \n",
       "7                                              774.0   \n",
       "8                                               80.0   \n",
       "9                                              124.0   \n",
       "10                                            2595.0   \n",
       "11                                             568.0   \n",
       "12                                              96.0   \n",
       "13                                            9574.0   \n",
       "14                                            2743.0   \n",
       "15                                               0.0   \n",
       "16                                              30.0   \n",
       "17                                              25.0   \n",
       "18                                               0.0   \n",
       "19                                             613.0   \n",
       "20                                             606.0   \n",
       "21                                             237.0   \n",
       "22                                               0.0   \n",
       "23                                            1664.0   \n",
       "24                                              13.0   \n",
       "25                                            8093.0   \n",
       "26                                              42.0   \n",
       "27                                            1889.0   \n",
       "28                                              45.0   \n",
       "29                                             265.0   \n",
       "30                                               0.0   \n",
       "31                                               0.0   \n",
       "32                                            1187.0   \n",
       "33                                               0.0   \n",
       "34                                               0.0   \n",
       "totals                                      161160.0   \n",
       "\n",
       "        No. of Inmates benefitted by Higher Education  \\\n",
       "0                                               672.0   \n",
       "1                                                 0.0   \n",
       "2                                                14.0   \n",
       "3                                               125.0   \n",
       "4                                               192.0   \n",
       "5                                                 6.0   \n",
       "6                                               875.0   \n",
       "7                                              1112.0   \n",
       "8                                                26.0   \n",
       "9                                                33.0   \n",
       "10                                              138.0   \n",
       "11                                              170.0   \n",
       "12                                               24.0   \n",
       "13                                              301.0   \n",
       "14                                              882.0   \n",
       "15                                                0.0   \n",
       "16                                                0.0   \n",
       "17                                               18.0   \n",
       "18                                                0.0   \n",
       "19                                              277.0   \n",
       "20                                              112.0   \n",
       "21                                               64.0   \n",
       "22                                                0.0   \n",
       "23                                              757.0   \n",
       "24                                                4.0   \n",
       "25                                             1353.0   \n",
       "26                                               29.0   \n",
       "27                                              123.0   \n",
       "28                                               11.0   \n",
       "29                                               85.0   \n",
       "30                                                0.0   \n",
       "31                                                0.0   \n",
       "32                                              908.0   \n",
       "33                                                0.0   \n",
       "34                                                0.0   \n",
       "totals                                        24933.0   \n",
       "\n",
       "        No. of Inmates benefitted by Computer Course  total_benefitted  \n",
       "0                                              170.0           24080.0  \n",
       "1                                                0.0               0.0  \n",
       "2                                               30.0            1470.0  \n",
       "3                                             1417.0            6248.0  \n",
       "4                                              103.0            3762.0  \n",
       "5                                               88.0             101.0  \n",
       "6                                              966.0            7284.0  \n",
       "7                                              243.0            3260.0  \n",
       "8                                                0.0             139.0  \n",
       "9                                               34.0             293.0  \n",
       "10                                             574.0            6315.0  \n",
       "11                                              12.0            1383.0  \n",
       "12                                             250.0             526.0  \n",
       "13                                             151.0           12004.0  \n",
       "14                                            1330.0            5301.0  \n",
       "15                                               0.0               0.0  \n",
       "16                                               0.0              31.0  \n",
       "17                                               0.0              43.0  \n",
       "18                                               0.0               0.0  \n",
       "19                                             384.0            1896.0  \n",
       "20                                             168.0            1211.0  \n",
       "21                                              38.0            1389.0  \n",
       "22                                               0.0               0.0  \n",
       "23                                             478.0            2967.0  \n",
       "24                                               2.0              34.0  \n",
       "25                                             212.0           17534.0  \n",
       "26                                              72.0             348.0  \n",
       "27                                             460.0            4495.0  \n",
       "28                                               0.0             223.0  \n",
       "29                                               0.0             350.0  \n",
       "30                                               0.0               0.0  \n",
       "31                                               0.0               0.0  \n",
       "32                                             174.0            3727.0  \n",
       "33                                               0.0               0.0  \n",
       "34                                               0.0               0.0  \n",
       "totals                                       22068.0          106414.0  "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\"\"\"\n",
    "3. Plotting:\n",
    "    \n",
    "a. Make a bar plot with each state name on the x -axis and their total benefitted inmates as their bar heights. \n",
    "Which state has the maximum number of beneficiaries?\n",
    "[Hint: Use bar method of pyplot]\n",
    "b. Make a pie chart that depicts the ratio among different modes of benefits.\n",
    "[Hint: Use pie method of pyplot]\n",
    "\n",
    "\"\"\"\n",
    "\n",
    "df_selected=df[['STATE/UT','total_benefitted']]\n",
    "\n",
    "df_selected_new=df_selected[:35]\n",
    "\n",
    "#df_selected_new\n",
    "\n",
    "#df_selected.plot.bar()\n",
    "\n",
    "df_selected_new.plot(kind='bar',x='STATE/UT',y='total_benefitted')\n",
    "\n",
    "plt.show()\n",
    "\n",
    "#df.plot(figsize=(5,5));\n",
    "\n",
    "#http://queirozf.com/entries/pandas-dataframe-plot-examples-with-matplotlib-pyplot\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>STATE/UT</th>\n",
       "      <th>total_benefitted</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>24080.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>17534.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Madhya Pradesh</td>\n",
       "      <td>12004.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Gujarat</td>\n",
       "      <td>7284.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Jharkhand</td>\n",
       "      <td>6315.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Bihar</td>\n",
       "      <td>6248.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>5301.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>West Bengal</td>\n",
       "      <td>4495.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Chhatisgarh</td>\n",
       "      <td>3762.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>3727.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Haryana</td>\n",
       "      <td>3260.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Tamilnadu</td>\n",
       "      <td>2967.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Orissa</td>\n",
       "      <td>1896.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Assam</td>\n",
       "      <td>1470.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Rajasthan</td>\n",
       "      <td>1389.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Karnataka</td>\n",
       "      <td>1383.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Punjab</td>\n",
       "      <td>1211.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Kerala</td>\n",
       "      <td>526.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Chandigarh</td>\n",
       "      <td>350.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Uttaranchal</td>\n",
       "      <td>348.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>293.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>A &amp; N Islands</td>\n",
       "      <td>223.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Himachal Pradesh</td>\n",
       "      <td>139.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Goa</td>\n",
       "      <td>101.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Mizoram</td>\n",
       "      <td>43.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Tripura</td>\n",
       "      <td>34.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Meghalaya</td>\n",
       "      <td>31.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Sikkim</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>Daman &amp; Diu</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>D &amp; N Haveli</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Arunachal Pradesh</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Nagaland</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>Lakshadweep</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Manipur</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>Pondicherry</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             STATE/UT  total_benefitted\n",
       "0      Andhra Pradesh           24080.0\n",
       "25      Uttar Pradesh           17534.0\n",
       "13     Madhya Pradesh           12004.0\n",
       "6             Gujarat            7284.0\n",
       "10          Jharkhand            6315.0\n",
       "3               Bihar            6248.0\n",
       "14        Maharashtra            5301.0\n",
       "27        West Bengal            4495.0\n",
       "4         Chhatisgarh            3762.0\n",
       "32              Delhi            3727.0\n",
       "7             Haryana            3260.0\n",
       "23          Tamilnadu            2967.0\n",
       "19             Orissa            1896.0\n",
       "2               Assam            1470.0\n",
       "21          Rajasthan            1389.0\n",
       "11          Karnataka            1383.0\n",
       "20             Punjab            1211.0\n",
       "12             Kerala             526.0\n",
       "29         Chandigarh             350.0\n",
       "26        Uttaranchal             348.0\n",
       "9     Jammu & Kashmir             293.0\n",
       "28      A & N Islands             223.0\n",
       "8    Himachal Pradesh             139.0\n",
       "5                 Goa             101.0\n",
       "17            Mizoram              43.0\n",
       "24            Tripura              34.0\n",
       "16          Meghalaya              31.0\n",
       "22             Sikkim               0.0\n",
       "31        Daman & Diu               0.0\n",
       "30       D & N Haveli               0.0\n",
       "1   Arunachal Pradesh               0.0\n",
       "18           Nagaland               0.0\n",
       "33        Lakshadweep               0.0\n",
       "15            Manipur               0.0\n",
       "34        Pondicherry               0.0"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#sorting dataframe\n",
    "df_selected_new.sort_values(\"total_benefitted\", axis = 0,ascending = False).head(35)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>STATE/UT</th>\n",
       "      <th>YEAR</th>\n",
       "      <th>No. of Inmates benefitted by Elementary Education</th>\n",
       "      <th>No. of Inmates benefitted by Adult Education</th>\n",
       "      <th>No. of Inmates benefitted by Higher Education</th>\n",
       "      <th>No. of Inmates benefitted by Computer Course</th>\n",
       "      <th>total_benefitted</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>9480.0</td>\n",
       "      <td>13758.0</td>\n",
       "      <td>672.0</td>\n",
       "      <td>170.0</td>\n",
       "      <td>24080.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Arunachal Pradesh</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Assam</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>676.0</td>\n",
       "      <td>750.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>1470.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Bihar</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>1693.0</td>\n",
       "      <td>3013.0</td>\n",
       "      <td>125.0</td>\n",
       "      <td>1417.0</td>\n",
       "      <td>6248.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Chhatisgarh</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>1664.0</td>\n",
       "      <td>1803.0</td>\n",
       "      <td>192.0</td>\n",
       "      <td>103.0</td>\n",
       "      <td>3762.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            STATE/UT    YEAR  \\\n",
       "0     Andhra Pradesh  2013.0   \n",
       "1  Arunachal Pradesh  2013.0   \n",
       "2              Assam  2013.0   \n",
       "3              Bihar  2013.0   \n",
       "4        Chhatisgarh  2013.0   \n",
       "\n",
       "   No. of Inmates benefitted by Elementary Education  \\\n",
       "0                                             9480.0   \n",
       "1                                                0.0   \n",
       "2                                              676.0   \n",
       "3                                             1693.0   \n",
       "4                                             1664.0   \n",
       "\n",
       "   No. of Inmates benefitted by Adult Education  \\\n",
       "0                                       13758.0   \n",
       "1                                           0.0   \n",
       "2                                         750.0   \n",
       "3                                        3013.0   \n",
       "4                                        1803.0   \n",
       "\n",
       "   No. of Inmates benefitted by Higher Education  \\\n",
       "0                                          672.0   \n",
       "1                                            0.0   \n",
       "2                                           14.0   \n",
       "3                                          125.0   \n",
       "4                                          192.0   \n",
       "\n",
       "   No. of Inmates benefitted by Computer Course  total_benefitted  \n",
       "0                                         170.0           24080.0  \n",
       "1                                           0.0               0.0  \n",
       "2                                          30.0            1470.0  \n",
       "3                                        1417.0            6248.0  \n",
       "4                                         103.0            3762.0  "
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#b. Make a pie chart that depicts the ratio among different modes of benefits.\n",
    "#[Hint: Use pie method of pyplot]\n",
    "\n",
    "\n",
    "#print(df.head(5))\n",
    "\n",
    "\n",
    "df.head()\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of Inmates benefitted by Elementary Education</th>\n",
       "      <th>No. of Inmates benefitted by Adult Education</th>\n",
       "      <th>No. of Inmates benefitted by Higher Education</th>\n",
       "      <th>No. of Inmates benefitted by Computer Course</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>totals</th>\n",
       "      <td>111081.0</td>\n",
       "      <td>161160.0</td>\n",
       "      <td>24933.0</td>\n",
       "      <td>22068.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        No. of Inmates benefitted by Elementary Education  \\\n",
       "totals                                           111081.0   \n",
       "\n",
       "        No. of Inmates benefitted by Adult Education  \\\n",
       "totals                                      161160.0   \n",
       "\n",
       "        No. of Inmates benefitted by Higher Education  \\\n",
       "totals                                        24933.0   \n",
       "\n",
       "        No. of Inmates benefitted by Computer Course  \n",
       "totals                                       22068.0  "
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "\"\"\"\n",
    "df_selected=df[['STATE/UT','total_benefitted']]\n",
    "\n",
    "df_selected_new=df_selected[:35]\n",
    "\n",
    "#df_selected_new\n",
    "\n",
    "#df_selected.plot.bar()\n",
    "\n",
    "df_selected_new.plot(kind='bar',x='STATE/UT',y='total_benefitted')\n",
    "\n",
    "plt.show()\n",
    "\n",
    "\"\"\"\n",
    "\n",
    "\n",
    "df_final = df[-1:]\n",
    "\n",
    "df_final=df_final[['No. of Inmates benefitted by Elementary Education','No. of Inmates benefitted by Adult Education',\n",
    "                  'No. of Inmates benefitted by Higher Education','No. of Inmates benefitted by Computer Course']]\n",
    "\n",
    "df_final.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "\n",
    "df_selected_new.plot(kind='PIE',y='total_benefitted',autopct='%1.1f%%', \n",
    " startangle=90, shadow=False, labels=df['STATE/UT'], legend = False, fontsize=14)\n",
    "\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\"\"\"\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "from pandas.tools.plotting import table\n",
    "\n",
    "# sample data\n",
    "raw_data = {'officer_name': ['Jason', 'Molly', 'Tina', 'Jake', 'Amy'],\n",
    "        'jan_arrests': [4, 24, 31, 2, 3],\n",
    "        'feb_arrests': [25, 94, 57, 62, 70],\n",
    "        'march_arrests': [5, 43, 23, 23, 51]}\n",
    "df = pd.DataFrame(raw_data, columns = ['officer_name', 'jan_arrests', 'feb_arrests', 'march_arrests'])\n",
    "df['total_arrests'] = df['jan_arrests'] + df['feb_arrests'] + df['march_arrests']\n",
    "\n",
    "plt.figure(figsize=(16,8))\n",
    "# plot chart\n",
    "ax1 = plt.subplot(121, aspect='equal')\n",
    "df.plot(kind='pie', y = 'total_arrests', ax=ax1, autopct='%1.1f%%', \n",
    " startangle=90, shadow=False, labels=df['officer_name'], legend = False, fontsize=14)\n",
    "\n",
    "# plot table\n",
    "ax2 = plt.subplot(122)\n",
    "plt.axis('off')\n",
    "tbl = table(ax2, df, loc='center')\n",
    "tbl.auto_set_font_size(False)\n",
    "tbl.set_fontsize(14)\n",
    "plt.show()\n",
    "\n",
    "\"\"\""
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
